name: Tauri 2 Release

# 设置触发条件
on:
  push:
    tags:
      - 'v*'  # 当推送以v开头的标签时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  # 设置运行环境
  setup:
    name: Setup environment
    runs-on: ubuntu-22.04
    outputs:
      node-modules-cache-key: ${{ steps.node-modules-cache.outputs.cache-key }}
      rust-cache-key: ${{ steps.rust-cache.outputs.cache-key }}
    steps:
      # 拉取项目代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 安装 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

  # 项目打包
  build:
    needs: setup
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, windows-latest ]
        include:
          - platform: macos-latest
            rust-target: aarch64-apple-darwin
            system-deps: |
              brew update
              brew install create-dmg
          - platform: windows-latest
            rust-target: x86_64-pc-windows-msvc
            system-deps: |
              choco install -y wixtoolset

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # 安装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      # 安装 Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # 使用 Rust 缓存，加快安装速度
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: target

      # 安装依赖, 前端打包
      - name: Install app dependencies and build web
        run: pnpm install --frozen-lockfile

      # 构建 Tauri 应用
      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        run: pnpm tauri build --target ${{ matrix.rust-target }}
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      # 上传构建结果
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/*.app
            src-tauri/target/release/bundle/*.dmg
            src-tauri/target/release/bundle/*.tar.gz
            src-tauri/target/release/bundle/*.msi
            src-tauri/target/release/bundle/*.exe

  # 代码发布
  release:
    needs: [ setup, build ]
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # 创建 GitHub release
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "App ${{ github.ref_name }}"
          body: "Built with Tauri 2 | See assets to download"
          draft: true # 是否生成release草稿
          prerelease: false # 是否生成预发布包
          files: |
            src-tauri/target/release/bundle/**/*